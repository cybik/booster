#!/bin/bash

# Triggered when a kernel is removed. Version is given as an argument.
inst_kern="${1}"
ukisuffix="uki"

TARGET_EFI_ROOT_DIR="/boot/efi"
TARGET_UKI_ROOT_DIR="${TARGET_EFI_ROOT_DIR}/EFI"
TARGET_UKI_BOOT_DIR="${TARGET_UKI_ROOT_DIR}/Linux"

# If EFI Linux target dir does not exist, exit silently.
[ -d "${TARGET_UKI_BOOT_DIR}" ] || { exit 0; }

TARGET_UKI_FILE_NAME="vmlinuz-${inst_kern}-${ukisuffix}*.efi"

#
echo "Attempting to clean up UKI image for ${inst_kern} in ${TARGET_UKI_BOOT_DIR}"

# Change dir
pushd "${TARGET_UKI_BOOT_DIR}" || exit 3

for FILE_MATCH in $(ls -d ${TARGET_UKI_FILE_NAME}); do
    [ -z "${FILE_MATCH}" ] && { echo "Clearly the devs missed something."; exit 5; }
    echo "Matching Unified Kernel Image file detected at '${FILE_MATCH}'"
    echo "Proceeding with cleanup"
    rm -f "${FILE_MATCH}" || { echo "Could not remove ${FILE_MATCH}." ; }
    if [ $(command -v sbctl) ]; then
        echo "Attempting to clean up sbctl reference to target UKI file"
        $(command -v sbctl) remove-file "${TARGET_UKI_BOOT_DIR}/${FILE_MATCH}" || { echo "Error while cleaning up sbctl database."; exit 0; }
    fi
done

# Peaceing out
popd || exit 4
